#!/bin/bash
#
# kcov-rust
#

PROGRAM_NAME=$0
OUTPUT_NAME=''

function print_usage()
{
  echo "$PROGRAM_NAME"
  echo ""
  echo "usage: $PROGRAM_NAME [TARGET_NAME]"
  echo ""
  echo "  TARGET_NAME : The name of the cargo library to test (uses the most recently created test executable by default)"
}

while (( $# )); do
  arg="$1"
  case $arg in
  -h|--help)
      print_usage
      exit 0
      ;;
  *)
      if [ -z $OUTPUT_NAME ]; then
        OUTPUT_NAME=$arg
      else
        echo "Unexpected argument '$arg'"
        print_usage
        exit 1
      fi
     ;;
  esac
  shift
done

if [ -z $OUTPUT_NAME ]; then OUTPUT_NAME=*; fi

TEST_OUTPUT_DIR=target/debug/deps

# this finds the newest file matching the pattern target/debug/deps/<ARG>-*, which is the test executable
TEST_EXECUTABLE=$(find $TEST_OUTPUT_DIR -type f -executable -name "$OUTPUT_NAME-*" -printf '%T@:%p\n' | sort -nr | head -n1 | sed 's/.*://')

if [ -z "$TEST_EXECUTABLE" ]; then
  echo "[kcov-rust] ERROR: No cargo-test output files found - aborting."
  exit 1
fi

# Replace the 'debug' directory with 'cov' to store coverage reports
COVERAGE_DIR=${TEST_EXECUTABLE/"debug/deps"/cov}

echo " ╒═ Running kcov-rust "
echo " ├─➤ Found input: $TEST_EXECUTABLE"
echo " ├─➤ Creating coverage output directory: $COVERAGE_DIR"
mkdir -p "$COVERAGE_DIR"

echo " ├─➤ Running kcov... "
echo " │"

EXEC_KCOV="kcov --exclude-pattern=.cargo,/usr/lib --verify $COVERAGE_DIR $TEST_EXECUTABLE -q"
echo " │ $ $EXEC_KCOV"

$EXEC_KCOV 2>&1 | sed 's/^/ │/'
RETVAL= ${PIPESTATUS[0]}

if [ $RETVAL != "0" ]; then
  echo " ┕━X kcov failed. aborting"
  exit $RETVAL
fi

# copy coverage xml file to current directory
find $TEST_OUTPUT_DIR -name cobertura.xml -exec cp {} . \;

echo " ├─➤ kcov successful"
echo " ╘══ kcov-rust complete"
